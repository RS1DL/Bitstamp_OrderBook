// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderBook.Api.Infrastructure.DB;

#nullable disable

namespace OrderBook.Api.Migrations
{
    [DbContext(typeof(OrderBookDbContext))]
    [Migration("20241226061039_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderBook.Api.Infrastructure.DB.Entities.OrderBookEntity", b =>
                {
                    b.Property<Guid>("OrderBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MicroTimeStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderBookId");

                    b.ToTable("OrderBooks");
                });

            modelBuilder.Entity("OrderBook.Api.Infrastructure.DB.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("OrderBookEntityOrderBookId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderBookEntityOrderBookId1")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderBookId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderBookEntityOrderBookId");

                    b.HasIndex("OrderBookEntityOrderBookId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderBook.Api.Infrastructure.DB.Entities.OrderEntity", b =>
                {
                    b.HasOne("OrderBook.Api.Infrastructure.DB.Entities.OrderBookEntity", null)
                        .WithMany("Asks")
                        .HasForeignKey("OrderBookEntityOrderBookId");

                    b.HasOne("OrderBook.Api.Infrastructure.DB.Entities.OrderBookEntity", null)
                        .WithMany("Bids")
                        .HasForeignKey("OrderBookEntityOrderBookId1");
                });

            modelBuilder.Entity("OrderBook.Api.Infrastructure.DB.Entities.OrderBookEntity", b =>
                {
                    b.Navigation("Asks");

                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
